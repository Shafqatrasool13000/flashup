/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HSCompound, HSCompoundInterface } from "../HSCompound";

const _abi = [
  {
    inputs: [],
    name: "MSG_SENDER_KEY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NATIVE_TOKEN_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POSTPROCESS_SIG",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenBorrow",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "uBorrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "needEnterMarket",
        type: "bool",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "cache",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
    ],
    name: "claimComp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "enterMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "cTokens",
        type: "address[]",
      },
    ],
    name: "enterMarkets",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "cToken",
        type: "address",
      },
    ],
    name: "exitMarket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "postProcess",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenRepay",
        type: "address",
      },
      {
        internalType: "address",
        name: "cTokenWithdraw",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "uRepayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cWithdrawAmount",
        type: "uint256",
      },
    ],
    name: "repayBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stack",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dsProxy",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611cfd806100206000396000f3fe6080604052600436106100f35760003560e01c8063d9caed121161008a578063f53cc4b311610059578063f53cc4b314610264578063f5f5ba7214610277578063fa2901a5146102b0578063fffdb6a0146102e457600080fd5b8063d9caed12146101de578063dc9031c4146101f1578063df2ebdbb14610211578063e9af02921461025157600080fd5b80638340f549116100c65780638340f5491461017a57806387c139431461018d57806399eb59b9146101a9578063c2722916146101d657600080fd5b80630f532d18146100f857806324991d661461013f5780632e528a37146101545780634883400d14610167575b600080fd5b34801561010457600080fd5b5061012c7fb2f2618cecbbb6e7468cc0f2aa43858ad8d153e0280b22285e28e853bb9d453a81565b6040519081526020015b60405180910390f35b61015261014d366004611861565b6102f7565b005b6101526101623660046118f3565b6103f7565b6101526101753660046119a2565b61065a565b610152610188366004611962565b610817565b34801561019957600080fd5b5061012c670de0b6b3a764000081565b3480156101b557600080fd5b5061012c6101c4366004611a41565b60016020526000908152604090205481565b610152610875565b6101526101ec366004611962565b6108b9565b3480156101fd57600080fd5b5061012c61020c366004611a41565b610944565b34801561021d57600080fd5b5061023973eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81565b6040516001600160a01b039091168152602001610136565b61012c61025f366004611822565b610965565b610152610272366004611861565b610b7d565b34801561028357600080fd5b50604080518082018252600a8152691214d0dbdb5c1bdd5b9960b21b602082015290516101369190611b88565b3480156102bc57600080fd5b506102cb636139148b60e11b81565b6040516001600160e01b03199091168152602001610136565b6101526102f2366004611899565b610d26565b8160006103026110ac565b90506103e7816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034a57600080fd5b505afa15801561035e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103829190611845565b6001600160a01b0316146040518060400160405280600781526020016611d95b995c985b60ca1b8152506040518060400160405280601881526020017f4e6f74206f776e6572206f662074686520445350726f787900000000000000008152506110fa565b6103f1848461110e565b50505050565b8560006104026110ac565b905061044a816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034a57600080fd5b841561045b5761045b888887611261565b821561046b5761046b888861110e565b83156106505760006001600160a01b0387167364078a6189bf45f80091c6ff2fcee1b15ac8dbde14156104b3575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6104bf565b6104bc8761133e565b90505b886001600160a01b0316631cff79cd73fc39d3482af7b4187553eb4193ab0dae836119f5634b8a35298a896040516024016104fb929190611b21565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519184901b6001600160e01b03191682526105429291600401611afd565b602060405180830381600087803b15801561055c57600080fd5b505af192505050801561058c575060408051601f3d908101601f1916820190925261058991810190611a59565b60015b61061457610598611c02565b806308c379a014156105e657506105ad611c1a565b806105b857506105e8565b6105e060405180604001604052806006815260200165626f72726f7760d01b815250826113b7565b50610616565b505b61060f60405180604001604052806006815260200165626f72726f7760d01b815250611412565b610616565b505b610621898287611442565b6001600160a01b03811673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee1461064e5761064e81611592565b505b5050505050505050565b8260006106656110ac565b90506106ad816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034a57600080fd5b846001600160a01b0316631cff79cd73fc39d3482af7b4187553eb4193ab0dae836119f563c299823887876040516024016106e9929190611b3a565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519184901b6001600160e01b03191682526107309291600401611afd565b602060405180830381600087803b15801561074a57600080fd5b505af192505050801561077a575060408051601f3d908101601f1916820190925261077791810190611a59565b60015b61080e57610786611c02565b806308c379a014156107da575061079b611c1a565b806107a657506107dc565b6107d46040518060400160405280600c81526020016b656e7465724d61726b65747360a01b815250826113b7565b50610810565b505b6108096040518060400160405280600c81526020016b656e7465724d61726b65747360a01b815250611412565b610810565b505b5050505050565b8260006108226110ac565b905061086a816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034a57600080fd5b610810858585611261565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c696420706f73742070726f6365737360601b60448201526064015b60405180910390fd5b8260006108c46110ac565b905061090c816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034a57600080fd5b610917858585611442565b6001600160a01b03841673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee146108105761081084611592565b6000818154811061095457600080fd5b600091825260209091200154905081565b60008160006109726110ac565b90506109ba816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034a57600080fd5b6040516374d7814960e11b81526001600160a01b03851660048201527305df6c772a563ffb37fd3e04c1a279fb302286219063e9af029290602401600060405180830381600087803b158015610a0f57600080fd5b505af1925050508015610a20575060015b610aa957610a2c611c02565b806308c379a01415610a7d5750610a41611c1a565b80610a4c5750610a7f565b610a77604051806040016040528060098152602001680636c61696d436f6d760bc1b815250826113b7565b50610aa9565b505b610aa9604051806040016040528060098152602001680636c61696d436f6d760bc1b815250611412565b6040516370a0823160e01b81526001600160a01b0385166004820152600090733587b2f7e0e2d6166d6c14230e7fe160252b0ba4906370a082319060240160206040518083038186803b158015610aff57600080fd5b505afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b379190611a59565b9050610b5885733587b2f7e0e2d6166d6c14230e7fe160252b0ba483611442565b610b75733587b2f7e0e2d6166d6c14230e7fe160252b0ba4611592565b949350505050565b816000610b886110ac565b9050610bd0816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034a57600080fd5b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316630ede4edd60e41b1790529151631cff79cd60e01b815291861691631cff79cd91610c4c9173fc39d3482af7b4187553eb4193ab0dae836119f59190600401611afd565b602060405180830381600087803b158015610c6657600080fd5b505af1925050508015610c96575060408051601f3d908101601f19168201909252610c9391810190611a59565b60015b61081057610ca2611c02565b806308c379a01415610cf45750610cb7611c1a565b80610cc25750610cf6565b610cee6040518060400160405280600a815260200169195e1a5d13585c9ad95d60b21b815250826113b7565b506103f1565b505b610d216040518060400160405280600a815260200169195e1a5d13585c9ad95d60b21b815250611412565b6103f1565b846000610d316110ac565b9050610d79816001600160a01b0316836001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561034a57600080fd5b8315611089576001600160a01b0386167364078a6189bf45f80091c6ff2fcee1b15ac8dbde1415610f0457866001600160a01b0316631cff79cd8573fc39d3482af7b4187553eb4193ab0dae836119f563abdb5ea88a89604051602401610de1929190611b21565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519185901b6001600160e01b0319168252610e289291600401611afd565b6020604051808303818588803b158015610e4157600080fd5b505af193505050508015610e72575060408051601f3d908101601f19168201909252610e6f91810190611a59565b60015b610ecb57610e7e611c02565b806308c379a01415610ed15750610e93611c1a565b80610e9e5750610ed3565b610ecb6040518060400160405280600b81526020016a7265706179426f72726f7760a81b815250826113b7565b50611089565b505b610eff6040518060400160405280600b81526020016a7265706179426f72726f7760a81b815250611412565b611089565b6000610f0f8761133e565b9050610f1c8189876115d1565b876001600160a01b0316631cff79cd73fc39d3482af7b4187553eb4193ab0dae836119f563abdb5ea88a89604051602401610f58929190611b21565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519184901b6001600160e01b0319168252610f9f9291600401611afd565b602060405180830381600087803b158015610fb957600080fd5b505af1925050508015610fe9575060408051601f3d908101601f19168201909252610fe691810190611a59565b60015b61107b57610ff5611c02565b806308c379a01415611048575061100a611c1a565b80611015575061104a565b6110426040518060400160405280600b81526020016a7265706179426f72726f7760a81b815250826113b7565b5061107d565b505b6110766040518060400160405280600b81526020016a7265706179426f72726f7760a81b815250611412565b61107d565b505b61108781896116de565b505b82156110a35761109a878685611442565b6110a385611592565b50505050505050565b7fb2f2618cecbbb6e7468cc0f2aa43858ad8d153e0280b22285e28e853bb9d453a60005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b826111095761110982826113b7565b505050565b604080516001600160a01b0383811660248084019190915283518084039091018152604490920183526020820180516001600160e01b0316633fe5d42560e01b1790529151631cff79cd60e01b815291841691631cff79cd9161118a9173fc39d3482af7b4187553eb4193ab0dae836119f59190600401611afd565b602060405180830381600087803b1580156111a457600080fd5b505af19250505080156111d4575060408051601f3d908101601f191682019092526111d191810190611a59565b60015b611109576111e0611c02565b806308c379a0141561122e57506111f5611c1a565b806112005750611230565b6111096040518060400160405280600c81526020016b17d95b9d195c93585c9ad95d60a21b815250826113b7565b505b61125d6040518060400160405280600c81526020016b17d95b9d195c93585c9ad95d60a21b815250611412565b5050565b6001600160a01b03821673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee14156112be5760405183906001600160a01b0382169083156108fc029084906000818181858888f19350505050158015610810573d6000803e3d6000fd5b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906112ec9086908590600401611b21565b602060405180830381600087803b15801561130657600080fd5b505af115801561131a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f19190611a25565b6000816001600160a01b0316636f307dc36040518163ffffffff1660e01b815260040160206040518083038186803b15801561137957600080fd5b505afa15801561138d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b19190611845565b92915050565b60408051808201909152600a8152691214d0dbdb5c1bdd5b9960b21b602082015282826040516020016113ec93929190611a9d565b60408051601f198184030181529082905262461bcd60e51b82526108b091600401611b88565b61143f816040518060400160405280600b81526020016a155b9cdc1958da599a595960aa1b8152506113b7565b50565b826001600160a01b0316631cff79cd73fc39d3482af7b4187553eb4193ab0dae836119f563f3fef3a3858560405160240161147e929190611b21565b60408051808303601f1901815291815260208201805160e094851b6001600160e01b03909116179052519184901b6001600160e01b03191682526114c59291600401611afd565b602060405180830381600087803b1580156114df57600080fd5b505af192505050801561150f575060408051601f3d908101601f1916820190925261150c91810190611a59565b60015b6103f15761151b611c02565b806308c379a014156115665750611530611c1a565b8061153b5750611568565b6103f1604051806040016040528060098152602001685f776974686472617760b81b815250826113b7565b505b611109604051806040016040528060098152602001685f776974686472617760b81b815250611412565b600080546001810182559080526001600160a01b0382167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015550565b60405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906115ff9085908590600401611b21565b600060405180830381600087803b15801561161957600080fd5b505af192505050801561162a575060015b6111095760405163095ea7b360e01b81526001600160a01b0384169063095ea7b39061165d908590600090600401611b21565b602060405180830381600087803b15801561167757600080fd5b505af115801561168b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116af9190611a25565b5060405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906112ec9085908590600401611b21565b604051636eb1769f60e11b81523060048201526001600160a01b0382811660248301526000919084169063dd62ed3e9060440160206040518083038186803b15801561172957600080fd5b505afa15801561173d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117619190611a59565b111561125d5760405163095ea7b360e01b81526001600160a01b0383169063095ea7b390611796908490600090600401611b21565b600060405180830381600087803b1580156117b057600080fd5b505af19250505080156117c1575060015b61125d5760405163095ea7b360e01b81526001600160a01b0383169063095ea7b3906117f4908490600190600401611b21565b600060405180830381600087803b15801561180e57600080fd5b505af115801561080e573d6000803e3d6000fd5b600060208284031215611833578081fd5b813561183e81611ca4565b9392505050565b600060208284031215611856578081fd5b815161183e81611ca4565b60008060408385031215611873578081fd5b823561187e81611ca4565b9150602083013561188e81611ca4565b809150509250929050565b600080600080600060a086880312156118b0578081fd5b85356118bb81611ca4565b945060208601356118cb81611ca4565b935060408601356118db81611ca4565b94979396509394606081013594506080013592915050565b60008060008060008060c0878903121561190b578081fd5b863561191681611ca4565b9550602087013561192681611ca4565b9450604087013561193681611ca4565b9350606087013592506080870135915060a087013561195481611cb9565b809150509295509295509295565b600080600060608486031215611976578283fd5b833561198181611ca4565b9250602084013561199181611ca4565b929592945050506040919091013590565b6000806000604084860312156119b6578283fd5b83356119c181611ca4565b9250602084013567ffffffffffffffff808211156119dd578384fd5b818601915086601f8301126119f0578384fd5b8135818111156119fe578485fd5b8760208260051b8501011115611a12578485fd5b6020830194508093505050509250925092565b600060208284031215611a36578081fd5b815161183e81611cb9565b600060208284031215611a52578081fd5b5035919050565b600060208284031215611a6a578081fd5b5051919050565b60008151808452611a89816020860160208601611b9b565b601f01601f19169290920160200192915050565b60008451611aaf818460208901611b9b565b605f60f81b9083019081528451611acd816001840160208901611b9b565b6101d160f51b600192909101918201528351611af0816003840160208801611b9b565b0160030195945050505050565b6001600160a01b0383168152604060208201819052600090610b7590830184611a71565b6001600160a01b03929092168252602082015260400190565b60208082528181018390526000908460408401835b86811015611b7d578235611b6281611ca4565b6001600160a01b031682529183019190830190600101611b4f565b509695505050505050565b60208152600061183e6020830184611a71565b60005b83811015611bb6578181015183820152602001611b9e565b838111156103f15750506000910152565b601f8201601f1916810167ffffffffffffffff81118282101715611bfb57634e487b7160e01b600052604160045260246000fd5b6040525050565b600060033d1115611c1757600481823e5160e01c5b90565b600060443d1015611c285790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611c5857505050505090565b8285019150815181811115611c705750505050505090565b843d8701016020828501011115611c8a5750505050505090565b611c9960208286010187611bc7565b509095945050505050565b6001600160a01b038116811461143f57600080fd5b801515811461143f57600080fdfea2646970667358221220d4acd8ce3ca557e2413106251445cc575606f96d234cd58ec931a6c699be091a64736f6c63430008040033";

export class HSCompound__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HSCompound> {
    return super.deploy(overrides || {}) as Promise<HSCompound>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HSCompound {
    return super.attach(address) as HSCompound;
  }
  connect(signer: Signer): HSCompound__factory {
    return super.connect(signer) as HSCompound__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HSCompoundInterface {
    return new utils.Interface(_abi) as HSCompoundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HSCompound {
    return new Contract(address, _abi, signerOrProvider) as HSCompound;
  }
}
