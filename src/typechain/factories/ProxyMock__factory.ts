/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ProxyMock, ProxyMockInterface } from "../ProxyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "feeRuleRegistry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "ChargeFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "tag",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "gas",
        type: "int256",
      },
    ],
    name: "DeltaGas",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "tag",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    name: "GetGas",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "handler",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    name: "LogBegin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "handler",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "LogEnd",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PolygonBridged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "RecordHandlerResult",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MSG_SENDER_KEY",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_BASE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POSTPROCESS_SIG",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "configs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "uint256[]",
        name: "ruleIndexes",
        type: "uint256[]",
      },
    ],
    name: "batchExec",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "cache",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execMock",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tos",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "configs",
        type: "bytes32[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
    ],
    name: "execs",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRuleRegistry",
    outputs: [
      {
        internalType: "contract IFeeRuleRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract IRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Config.HandlerType",
        name: "handlerType",
        type: "uint8",
      },
    ],
    name: "setHandlerType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "sig",
        type: "bytes4",
      },
      {
        internalType: "bytes32[]",
        name: "params",
        type: "bytes32[]",
      },
    ],
    name: "setPostProcess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stack",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "updateTokenMock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002b4d38038062002b4d8339810160408190526200003491620000a7565b6001600160601b0319606083811b821660805282901b1660a0526200005862000060565b5050620000de565b7f37698e52cd5639897dae03c485a7870bceb6876f0e950fc063664398d5580c0c61138d5a039055565b80516001600160a01b0381168114620000a257600080fd5b919050565b60008060408385031215620000ba578182fd5b620000c5836200008a565b9150620000d5602084016200008a565b90509250929050565b60805160601c60a05160601c6129fd6200015060003960008181610489015261106a015260008181610119015281816101da01528181610334015281816104e80152818161069f015281816108840152818161094501528181610b3101528181610bf20152610f0c01526129fd6000f3fe6080604052600436106100c65760003560e01c806387c139431161007f578063be19275b11610059578063be19275b14610573578063dc9031c414610593578063f835f309146105b3578063fa2901a51461060d57610117565b806387c139431461050a57806399eb59b914610526578063b5af492a1461055357610117565b80630f532d181461040f57806341f188e11461044457806357da6a9114610457578063678987bb1461047757806371938509146104c35780637b103999146104d657610117565b3661011757333b6101155760405162461bcd60e51b81526020600482015260146024820152734e6f7420616c6c6f7765642066726f6d20454f4160601b60448201526064015b60405180910390fd5b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ea750af66040518163ffffffff1660e01b815260040160206040518083038186803b15801561017057600080fd5b505afa158015610184573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a891906125ef565b156101c55760405162461bcd60e51b815260040161010c906127b4565b604051630c81ee5560e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631903dcaa9060240160206040518083038186803b15801561022457600080fd5b505afa158015610238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025c9190612627565b156102795760405162461bcd60e51b815260040161010c90612794565b6000610283610641565b6001600160a01b031614156102d65760405162461bcd60e51b815260206004820152601960248201527814d95b99195c881a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b604482015260640161010c565b6102df3361067d565b61031c5760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21031b0b63632b960911b604482015260640161010c565b604051637bbf4a3f60e01b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637bbf4a3f9060240160206040518083038186803b15801561037e57600080fd5b505afa158015610392573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b69190612627565b60601c90506000610402826000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506000199250610722915050565b8051909150602082018181f35b34801561041b57600080fd5b506104316000805160206129a883398151915281565b6040519081526020015b60405180910390f35b610115610452366004612536565b610882565b61046a61046536600461245c565b610aa0565b60405161043b9190612781565b34801561048357600080fd5b506104ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161043b565b6101156104d13660046124a7565b610b2f565b3480156104e257600080fd5b506104ab7f000000000000000000000000000000000000000000000000000000000000000081565b34801561051657600080fd5b50610431670de0b6b3a764000081565b34801561053257600080fd5b5061043161054136600461260f565b60016020526000908152604090205481565b34801561055f57600080fd5b5061011561056e366004612399565b610db3565b34801561057f57600080fd5b5061011561058e36600461263f565b610e78565b34801561059f57600080fd5b506104316105ae36600461260f565b610e86565b3480156105bf57600080fd5b506101156105ce366004612378565b600080546001810182559080526001600160a01b0382167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639091015550565b34801561061957600080fd5b50610628636139148b60e11b81565b6040516001600160e01b0319909116815260200161043b565b6000805160206129a883398151915260005260016020527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95490565b60405163bb1010e960e01b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063bb1010e9906024015b60206040518083038186803b1580156106e457600080fd5b505afa1580156106f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071c91906125ef565b92915050565b606061072d83610ea7565b61073684610eea565b6107745760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b2103430b7323632b960891b604482015260640161010c565b6000806000855160208701886113885a03f490503d6040519250601f19601f6020830101168301604052808352806000602085013e508061087a576044825110156107e95760405162461bcd60e51b81526020600482015260056024820152645f6578656360d81b604482015260640161010c565b600482019150600019831415610826578180602001905181019061080d919061265e565b60405162461bcd60e51b815260040161010c9190612781565b61082f83610f3d565b82806020019051810190610843919061265e565b6040516020016108549291906126fc565b60408051601f198184030181529082905262461bcd60e51b825261010c91600401612781565b509392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ea750af66040518163ffffffff1660e01b815260040160206040518083038186803b1580156108db57600080fd5b505afa1580156108ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091391906125ef565b156109305760405162461bcd60e51b815260040161010c906127b4565b604051630c81ee5560e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631903dcaa9060240160206040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c79190612627565b156109e45760405162461bcd60e51b815260040161010c90612794565b610a2082828080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061105e92505050565b610a8f87878080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808b0282810182019093528a82529093508a92508991829185019084908082843760009201919091525088925061111e915050565b610a97611402565b50505050505050565b604080516000815260208101909152606090610abb8161105e565b610ac36116e4565b610acf84846000610722565b9150610ada8461170e565b610ae96247617360e81b6117a2565b610af1611402565b7f90c726ff5efa7268723ee48df835144384bc0f012e89750782886764b5e54f1682604051610b209190612781565b60405180910390a15092915050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ea750af66040518163ffffffff1660e01b815260040160206040518083038186803b158015610b8857600080fd5b505afa158015610b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc091906125ef565b15610bdd5760405162461bcd60e51b815260040161010c906127b4565b604051630c81ee5560e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631903dcaa9060240160206040518083038186803b158015610c3c57600080fd5b505afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c749190612627565b15610c915760405162461bcd60e51b815260040161010c90612794565b6000610c9b610641565b6001600160a01b03161415610cee5760405162461bcd60e51b815260206004820152601960248201527814d95b99195c881a5cc81b9bdd081a5b9a5d1a585b1a5e9959603a1b604482015260640161010c565b333014610d3d5760405162461bcd60e51b815260206004820152601d60248201527f446f6573206e6f7420616c6c6f772065787465726e616c2063616c6c73000000604482015260640161010c565b610dac8585808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505060408051602080890282810182019093528882529093508892508791829185019084908082843760009201919091525086925061111e915050565b5050505050565b80515b8015610e1357610e0182610dcb6001846128d8565b81518110610de957634e487b7160e01b600052603260045260246000fd5b6020026020010151600061181590919063ffffffff16565b80610e0b8161291f565b915050610db6565b5060008054600180820183558280526001600160e01b031985167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56392830155825480820184556001600160a01b038716920191909155610e73919061184f565b505050565b610e8360008261184f565b50565b60008181548110610e9657600080fd5b600091825260209091200154905081565b610e8381604051602401610ebb9190612781565b60408051601f198184030181529190526020810180516001600160e01b03166305f3bfab60e11b179052611899565b604051631a98d06960e31b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063d4c68348906024016106cc565b606081610f615750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610f8b5780610f7581612936565b9150610f849050600a83612866565b9150610f65565b6000816001600160401b03811115610fb357634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610fdd576020820181803683370190505b5090505b841561105657610ff26001836128d8565b9150610fff600a86612951565b61100a90603061284e565b60f81b81838151811061102d57634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535061104f600a86612866565b9450610fe1565b949350505050565b6110666118ba565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637c4e1d1b61109f610641565b846040518363ffffffff1660e01b81526004016110bd929190612738565b60206040518083038186803b1580156110d557600080fd5b505afa1580156110e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110d9190612627565b905061111a60018261194e565b5050565b61112661221b565b60008083518651146111845760405162461bcd60e51b815260206004820152602160248201527f546f7320616e64206461746173206c656e67746820696e636f6e73697374656e6044820152601d60fa1b606482015260840161010c565b84518651146111e15760405162461bcd60e51b815260206004820152602360248201527f546f7320616e6420636f6e66696773206c656e67746820696e636f6e73697374604482015262195b9d60ea1b606482015260840161010c565b60005b8651811015610a9757600087828151811061120f57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600087838151811061123b57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600087848151811061126757634e487b7160e01b600052603260045260246000fd5b6020026020010151905061127a826119cc565b61128a5761128a818389896119ee565b600061129582611b49565b9050806001600160e01b031916846001600160a01b03167f1e4e60ae3aeb9909ff5e6502e86867f181eadfa0c215186eaf47665909d71eb1846040516112db9190612781565b60405180910390a360006112f0858489610722565b9050866112fc81612936565b975050816001600160e01b031916856001600160a01b03167fc4c643b243548ed55ba2a304003e28a0a82c202984eb15e1d80d811e02dec47f836040516113439190612781565b60405180910390a361135484611c32565b156113e15760ff60f085901c16600061136e8b848c611c50565b905061137a828b61284e565b81146113dd5760405162461bcd60e51b815260206004820152602c60248201527f52657475726e206e756d20616e64207061727365642072657475726e206e756d60448201526b081b9bdd081b585d18da195960a21b606482015260840161010c565b9850505b6113ea8561170e565b505050505080806113fa90612936565b9150506111e4565b600054156116295760006114166000611d34565b9050600060a082901c600281111561143e57634e487b7160e01b600052602160045260246000fd5b9050600081600281111561146257634e487b7160e01b600052602160045260246000fd5b1415611575576040516370a0823160e01b815230600482015282906000906001600160a01b038316906370a082319060240160206040518083038186803b1580156114ac57600080fd5b505afa1580156114c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e49190612627565b9050801561156e5760405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb90604401602060405180830381600087803b15801561153457600080fd5b505af1158015611548573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061156c91906125ef565b505b5050611622565b600181600281111561159757634e487b7160e01b600052602160045260246000fd5b14156115e35760006115a96000611d7a565b6040805160048152602481019091526020810180516001600160e01b0316636139148b60e11b17905290915061156e908290600019610722565b60405162461bcd60e51b8152602060048201526014602482015273496e76616c69642068616e646c6572207479706560601b604482015260640161010c565b5050611402565b47801561165f57604051339082156108fc029083906000818181858888f1935050505015801561165d573d6000803e3d6000fd5b505b600160205260007fe3c27e9998c410cbc1bc99c043b2159f2223d768316452dd163c810fbf33d3938190557fb23c0bd6127fbb5e90a415ffb571bd6e4dfe0f2731ea5882703d050f6a0a0c998190556000805160206129a883398151915281527fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c95550565b7f37698e52cd5639897dae03c485a7870bceb6876f0e950fc063664398d5580c0c61138d5a039055565b6000546117185750565b600160a01b6117276000611da8565b148015611748575061173b60006001611e25565b6001600160e01b03191615155b15610e8357600080548061176c57634e487b7160e01b600052603160045260246000fd5b6001900381819060005260206000200160009055905561179681600061182d90919063ffffffff16565b610e836000600161184f565b7faf6ae684695362675b87dad33f48929dfb2daf9ddeda7c0bc0297cb70d1aeae7815a7f37698e52cd5639897dae03c485a7870bceb6876f0e950fc063664398d5580c0c5460ca19016117f59190612899565b6040805192835260208301919091520160405180910390a1610e836116e4565b81546001810183556000928352602090922090910155565b8154600181018355600092835260209092206001600160a01b03909116910155565b8181600281111561187057634e487b7160e01b600052602160045260246000fd5b81546001810183556000928352602090922060a09190911b6001600160a01b0319169101555050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b60006118c4610641565b6001600160a01b0316146119125760405162461bcd60e51b815260206004820152601560248201527414d95b99195c881a5cc81a5b9a5d1a585b1a5e9959605a1b604482015260640161010c565b6000805160206129a88339815191526000526001602052337fe066822ceb6294079ebca45035319f95ccb12306128dbdf5a257f0d1235733c955565b61195782611efd565b156119985760405162461bcd60e51b81526020600482015260116024820152704665652072617465206e6f74207a65726f60781b604482015260640161010c565b7f142183525227cae0e4300fd0fc77d7f3b08ceb0fd9cb2a6c5488668fa0ea5ffa6000908152602092909252604090912055565b6000600160f81b82166119e157506001919050565b506000919050565b919050565b6000806119fa85611f32565b9150915060005b8251811015610a975783838281518110611a2b57634e487b7160e01b600052603260045260246000fd5b602002602001015110611a805760405162461bcd60e51b815260206004820152601e60248201527f5265666572656e636520746f206f7574206f66206c6f63616c537461636b0000604482015260640161010c565b600085848381518110611aa357634e487b7160e01b600052603260045260246000fd5b60200260200101516101008110611aca57634e487b7160e01b600052603260045260246000fd5b602002015190506000838381518110611af357634e487b7160e01b600052603260045260246000fd5b602002602001015190506000670de0b6b3a764000090508160208b010180518015611b2f578481028582820414611b2957600080fd5b83900494505b509290925250819050611b4181612936565b915050611a01565b6000601882600381518110611b6e57634e487b7160e01b600052603260045260246000fd5b016020015183516001600160f81b031990911690911c9060109084906002908110611ba957634e487b7160e01b600052603260045260246000fd5b016020015184516001600160f81b031990911690911c9060089085906001908110611be457634e487b7160e01b600052603260045260246000fd5b016020015185516001600160f81b031990911690911c908590600090611c1a57634e487b7160e01b600052603260045260246000fd5b01602001516001600160f81b03191617171792915050565b600060f082901c60ff16611c4857506000919050565b506001919050565b8151600090611c60602082612951565b15611cad5760405162461bcd60e51b815260206004820152601960248201527f696c6c6567616c206c656e67746820666f72205f706172736500000000000000604482015260640161010c565b611cb8602082612866565b611cc2908461284e565b9150610100821115611d075760405162461bcd60e51b815260206004820152600e60248201526d737461636b206f766572666c6f7760901b604482015260640161010c565b8260051b60005b82811015611d2a57602081870181015183830189015201611d0e565b5050509392505050565b6000611d3f82611da8565b905081805480611d5f57634e487b7160e01b600052603160045260246000fd5b60019003818190600052602060002001600090559055919050565b6000611d8582611da8565b60001c905081805480611d5f57634e487b7160e01b600052603160045260246000fd5b805460009080611de85760405162461bcd60e51b815260206004820152600b60248201526a737461636b20656d70747960a81b604482015260640161010c565b82611df46001836128d8565b81548110611e1257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154915050919050565b815460009080611e655760405162461bcd60e51b815260206004820152600b60248201526a737461636b20656d70747960a81b604482015260640161010c565b828111611eb45760405162461bcd60e51b815260206004820152601c60248201527f6e6f7420656e6f75676820656c656d656e747320696e20737461636b00000000604482015260640161010c565b836001611ec185846128d8565b611ecb91906128d8565b81548110611ee957634e487b7160e01b600052603260045260246000fd5b906000526020600020015491505092915050565b7f142183525227cae0e4300fd0fc77d7f3b08ceb0fd9cb2a6c5488668fa0ea5ffa60009081526020829052604081205461071c565b606080611f3e836119cc565b15611f7b5760405162461bcd60e51b815260206004820152600d60248201526c53746174696320706172616d7360981b604482015260640161010c565b60165b60ff848116148015611f905750600081115b15611fae5780611f9f8161291f565b915050600884901c9350611f7e565b60008111611ff15760405162461bcd60e51b815260206004820152601060248201526f4e6f2064796e616d696320706172616d60801b604482015260640161010c565b806001600160401b0381111561201757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612040578160200160208202803683370190505b509250806001600160401b0381111561206957634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612092578160200160208202803683370190505b50915060005b818110156120eb57835160ff8616908590839081106120c757634e487b7160e01b600052603260045260246000fd5b602090810291909101015260089490941c93806120e381612936565b915050612098565b506000805b60408110156121b95760018616156121a0578282106121515760405162461bcd60e51b815260206004820181905260248201527f4c6f636174696f6e20636f756e7420657863656564732072656620636f756e74604482015260640161010c565b61215c81602061287a565b61216790600461284e565b84838151811061218757634e487b7160e01b600052603260045260246000fd5b60209081029190910101528161219c81612936565b9250505b60019590951c94806121b181612936565b9150506120f0565b508181146122145760405162461bcd60e51b815260206004820152602260248201527f4c6f636174696f6e20636f756e74206c657373207468616e2072656620636f756044820152611b9d60f21b606482015260840161010c565b5050915091565b604051806120000160405280610100906020820280368337509192915050565b80356001600160a01b03811681146119e957600080fd5b60008083601f840112612263578182fd5b5081356001600160401b03811115612279578182fd5b6020830191508360208260051b850101111561229457600080fd5b9250929050565b600082601f8301126122ab578081fd5b813560206122c06122bb83612804565b6127d4565b80838252828201915082860187848660051b89010111156122df578586fd5b855b8581101561231f5781356001600160401b038111156122fe578788fd5b61230c8a87838c010161232c565b85525092840192908401906001016122e1565b5090979650505050505050565b600082601f83011261233c578081fd5b813561234a6122bb82612827565b81815284602083860101111561235e578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215612389578081fd5b6123928261223b565b9392505050565b6000806000606084860312156123ad578182fd5b6123b68461223b565b92506020848101356001600160e01b0319811681146123d3578384fd5b925060408501356001600160401b038111156123ed578283fd5b8501601f810187136123fd578283fd5b803561240b6122bb82612804565b8082825284820191508484018a868560051b870101111561242a578687fd5b8694505b8385101561244c57803583526001949094019391850191850161242e565b5080955050505050509250925092565b6000806040838503121561246e578182fd5b6124778361223b565b915060208301356001600160401b03811115612491578182fd5b61249d8582860161232c565b9150509250929050565b6000806000806000606086880312156124be578081fd5b85356001600160401b03808211156124d4578283fd5b6124e089838a01612252565b909750955060208801359150808211156124f8578283fd5b61250489838a01612252565b9095509350604088013591508082111561251c578283fd5b506125298882890161229b565b9150509295509295909350565b60008060008060008060006080888a031215612550578182fd5b87356001600160401b0380821115612566578384fd5b6125728b838c01612252565b909950975060208a013591508082111561258a578384fd5b6125968b838c01612252565b909750955060408a01359150808211156125ae578384fd5b6125ba8b838c0161229b565b945060608a01359150808211156125cf578384fd5b506125dc8a828b01612252565b989b979a50959850939692959293505050565b600060208284031215612600578081fd5b81518015158114612392578182fd5b600060208284031215612620578081fd5b5035919050565b600060208284031215612638578081fd5b5051919050565b600060208284031215612650578081fd5b813560038110612392578182fd5b60006020828403121561266f578081fd5b81516001600160401b03811115612684578182fd5b8201601f81018413612694578182fd5b80516126a26122bb82612827565b8181528560208385010111156126b6578384fd5b6126c78260208301602086016128ef565b95945050505050565b600081518084526126e88160208601602086016128ef565b601f01601f19169290920160200192915050565b6000835161270e8184602088016128ef565b605f60f81b908301908152835161272c8160018401602088016128ef565b01600101949350505050565b6001600160a01b038316815260406020808301829052835191830182905260009184820191906060850190845b8181101561231f57845183529383019391830191600101612765565b60208152600061239260208301846126d0565b60208082526006908201526510985b9b995960d21b604082015260600190565b60208082526006908201526512185b1d195960d21b604082015260600190565b604051601f8201601f191681016001600160401b03811182821017156127fc576127fc612991565b604052919050565b60006001600160401b0382111561281d5761281d612991565b5060051b60200190565b60006001600160401b0382111561284057612840612991565b50601f01601f191660200190565b6000821982111561286157612861612965565b500190565b6000826128755761287561297b565b500490565b600081600019048311821515161561289457612894612965565b500290565b60008083128015600160ff1b8501841216156128b7576128b7612965565b6001600160ff1b03840183138116156128d2576128d2612965565b50500390565b6000828210156128ea576128ea612965565b500390565b60005b8381101561290a5781810151838201526020016128f2565b83811115612919576000848401525b50505050565b60008161292e5761292e612965565b506000190190565b600060001982141561294a5761294a612965565b5060010190565b6000826129605761296061297b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fdfeb2f2618cecbbb6e7468cc0f2aa43858ad8d153e0280b22285e28e853bb9d453aa2646970667358221220e930a38b8a0282900a982c4b7578f293a618bc7c4531396860915314c97060be64736f6c63430008040033";

export class ProxyMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    registry: string,
    feeRuleRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProxyMock> {
    return super.deploy(
      registry,
      feeRuleRegistry,
      overrides || {}
    ) as Promise<ProxyMock>;
  }
  getDeployTransaction(
    registry: string,
    feeRuleRegistry: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      registry,
      feeRuleRegistry,
      overrides || {}
    );
  }
  attach(address: string): ProxyMock {
    return super.attach(address) as ProxyMock;
  }
  connect(signer: Signer): ProxyMock__factory {
    return super.connect(signer) as ProxyMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProxyMockInterface {
    return new utils.Interface(_abi) as ProxyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProxyMock {
    return new Contract(address, _abi, signerOrProvider) as ProxyMock;
  }
}
